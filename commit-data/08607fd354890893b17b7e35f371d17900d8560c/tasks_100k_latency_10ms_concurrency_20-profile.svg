<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="693"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="693"> </text>
<g id="frames">
<g>
<title>all (296 samples, 100.00%)</title><rect x="10.0" y="659.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="670.0">all</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription.run (29 samples, 9.80%)</title><rect x="10.0" y="643.0" width="115.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="654.0">com/linecorp/d..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/CommitManager.maybeCommitAsync (1 samples, 0.34%)</title><rect x="10.0" y="627.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/CommitManager.commitAsync (1 samples, 0.34%)</title><rect x="10.0" y="611.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="622.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.commitAsync (1 samples, 0.34%)</title><rect x="10.0" y="595.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="606.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.commitOffsetsAsync (1 samples, 0.34%)</title><rect x="10.0" y="579.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="590.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.pollNoWakeup (1 samples, 0.34%)</title><rect x="10.0" y="563.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="574.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.poll (1 samples, 0.34%)</title><rect x="10.0" y="547.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="558.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.poll (1 samples, 0.34%)</title><rect x="10.0" y="531.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="542.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.poll (1 samples, 0.34%)</title><rect x="10.0" y="515.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="526.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.pollSelectionKeys (1 samples, 0.34%)</title><rect x="10.0" y="499.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="510.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector$SelectorMetrics.recordBytesSent (1 samples, 0.34%)</title><rect x="10.0" y="483.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="494.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (1 samples, 0.34%)</title><rect x="10.0" y="467.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="478.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ConsumeManager.poll (28 samples, 9.46%)</title><rect x="14.0" y="627.0" width="111.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="17.0" y="638.0">com/linecorp/..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ConsumeManager.pausePartitions (2 samples, 0.68%)</title><rect x="14.0" y="611.0" width="8.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="17.0" y="622.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/PartitionContexts.partitionsNeedsPause (1 samples, 0.34%)</title><rect x="14.0" y="595.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.0" y="606.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.pause (1 samples, 0.34%)</title><rect x="18.0" y="595.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.0" y="606.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ConsumeManager.resumePartitions (2 samples, 0.68%)</title><rect x="22.0" y="611.0" width="7.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="25.0" y="622.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/PartitionContexts.partitionsNeedsResume (1 samples, 0.34%)</title><rect x="22.0" y="595.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.0" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.collect (1 samples, 0.34%)</title><rect x="22.0" y="579.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="25.0" y="590.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.34%)</title><rect x="22.0" y="563.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.0" y="574.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (1 samples, 0.34%)</title><rect x="22.0" y="547.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="25.0" y="558.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (1 samples, 0.34%)</title><rect x="22.0" y="531.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.0" y="542.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.34%)</title><rect x="22.0" y="515.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="25.0" y="526.0"></text>
</g>
<g>
<title>java/util/HashMap$ValueSpliterator.forEachRemaining (1 samples, 0.34%)</title><rect x="22.0" y="499.0" width="3.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.0" y="510.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.34%)</title><rect x="22.0" y="483.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="25.0" y="494.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.34%)</title><rect x="22.0" y="467.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="25.0" y="478.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/PartitionContexts$$Lambda$265/265490703.test (1 samples, 0.34%)</title><rect x="22.0" y="451.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="25.0" y="462.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/PartitionContexts.lambda$partitionsNeedsResume$55 (1 samples, 0.34%)</title><rect x="22.0" y="435.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="25.0" y="446.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/PartitionContext.pendingTasksCount (1 samples, 0.34%)</title><rect x="22.0" y="419.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="25.0" y="430.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.resume (1 samples, 0.34%)</title><rect x="25.9" y="595.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="28.9" y="606.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/PartitionContexts.updatePartitionsStatus (2 samples, 0.68%)</title><rect x="29.9" y="611.0" width="8.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.9" y="622.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/PartitionContexts.updateHighWatermarks (2 samples, 0.68%)</title><rect x="29.9" y="595.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="32.9" y="606.0"></text>
</g>
<g>
<title>java/util/HashMap$Values.forEach (2 samples, 0.68%)</title><rect x="29.9" y="579.0" width="8.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="32.9" y="590.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/PartitionContexts$$Lambda$260/1759467965.accept (2 samples, 0.68%)</title><rect x="29.9" y="563.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="32.9" y="574.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/PartitionContext.updateHighWatermark (2 samples, 0.68%)</title><rect x="29.9" y="547.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="32.9" y="558.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/OutOfOrderCommitControl.updateHighWatermark (2 samples, 0.68%)</title><rect x="29.9" y="531.0" width="8.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="32.9" y="542.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.debug (1 samples, 0.34%)</title><rect x="29.9" y="515.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="32.9" y="526.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (1 samples, 0.34%)</title><rect x="33.9" y="515.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="36.9" y="526.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_0_Or3Plus (1 samples, 0.34%)</title><rect x="33.9" y="499.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="36.9" y="510.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (9 samples, 3.04%)</title><rect x="37.9" y="611.0" width="35.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="40.9" y="622.0">jav..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ConsumeManager$$Lambda$259/1173836526.accept (9 samples, 3.04%)</title><rect x="37.9" y="595.0" width="35.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="40.9" y="606.0">com..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription$Handler.receive (8 samples, 2.70%)</title><rect x="41.9" y="579.0" width="31.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="44.9" y="590.0">co..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/PartitionContext.addRequest (5 samples, 1.69%)</title><rect x="45.9" y="563.0" width="19.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.9" y="574.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/PartitionProcessor.addTask (5 samples, 1.69%)</title><rect x="45.9" y="547.0" width="19.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="48.9" y="558.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessorUnit.putTask (5 samples, 1.69%)</title><rect x="45.9" y="531.0" width="19.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="48.9" y="542.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1016925085.linkToTargetMethod (1 samples, 0.34%)</title><rect x="45.9" y="515.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="48.9" y="526.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1991294891.invokeStatic_LL_L (1 samples, 0.34%)</title><rect x="45.9" y="499.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="48.9" y="510.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessorUnit$$Lambda$279/1524458463.get$Lambda (1 samples, 0.34%)</title><rect x="45.9" y="483.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="48.9" y="494.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.34%)</title><rect x="45.9" y="467.0" width="4.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="48.9" y="478.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.34%)</title><rect x="45.9" y="451.0" width="4.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="48.9" y="462.0"></text>
</g>
<g>
<title>CollectedHeap::common_mem_allocate_init(KlassHandle, unsigned long, Thread*) (1 samples, 0.34%)</title><rect x="45.9" y="435.0" width="4.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="48.9" y="446.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.34%)</title><rect x="45.9" y="419.0" width="4.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="48.9" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/Executors$DelegatedExecutorService.execute (4 samples, 1.35%)</title><rect x="49.9" y="515.0" width="15.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="52.9" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 1.35%)</title><rect x="49.9" y="499.0" width="15.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="52.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 1.35%)</title><rect x="49.9" y="483.0" width="15.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="52.9" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.34%)</title><rect x="61.8" y="467.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="64.8" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$FairSync.lock (1 samples, 0.34%)</title><rect x="61.8" y="451.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="64.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.34%)</title><rect x="61.8" y="435.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="64.8" y="446.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/TaskRequest.&lt;init&gt; (2 samples, 0.68%)</title><rect x="65.8" y="563.0" width="8.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="68.8" y="574.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.68%)</title><rect x="65.8" y="547.0" width="8.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.8" y="558.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (1 samples, 0.34%)</title><rect x="69.8" y="531.0" width="4.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="72.8" y="542.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.poll (13 samples, 4.39%)</title><rect x="73.8" y="611.0" width="51.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="76.8" y="622.0">org/a..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.poll (13 samples, 4.39%)</title><rect x="73.8" y="595.0" width="51.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="76.8" y="606.0">org/a..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.pollForFetches (10 samples, 3.38%)</title><rect x="73.8" y="579.0" width="39.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="76.8" y="590.0">org..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.rejoinNeededOrPending (2 samples, 0.68%)</title><rect x="73.8" y="563.0" width="8.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.8" y="574.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/AbstractCoordinator.rejoinNeededOrPending (2 samples, 0.68%)</title><rect x="73.8" y="547.0" width="8.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="76.8" y="558.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.34%)</title><rect x="73.8" y="531.0" width="4.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="76.8" y="542.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.34%)</title><rect x="77.8" y="531.0" width="4.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="80.8" y="542.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.34%)</title><rect x="77.8" y="515.0" width="4.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="80.8" y="526.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.poll (6 samples, 2.03%)</title><rect x="81.8" y="563.0" width="23.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="84.8" y="574.0">o..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.poll (6 samples, 2.03%)</title><rect x="81.8" y="547.0" width="23.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="84.8" y="558.0">o..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.34%)</title><rect x="81.8" y="531.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="84.8" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.34%)</title><rect x="81.8" y="515.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="84.8" y="526.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.34%)</title><rect x="81.8" y="499.0" width="3.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="84.8" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.34%)</title><rect x="81.8" y="483.0" width="3.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="84.8" y="494.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.34%)</title><rect x="81.8" y="467.0" width="3.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="84.8" y="478.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.poll (4 samples, 1.35%)</title><rect x="85.7" y="531.0" width="16.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="88.7" y="542.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.handleCompletedReceives (1 samples, 0.34%)</title><rect x="85.7" y="515.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="88.7" y="526.0"></text>
</g>
<g>
<title>org/apache/kafka/common/requests/AbstractResponse.parseResponse (1 samples, 0.34%)</title><rect x="85.7" y="499.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="88.7" y="510.0"></text>
</g>
<g>
<title>org/apache/kafka/common/requests/OffsetCommitResponse.&lt;init&gt; (1 samples, 0.34%)</title><rect x="85.7" y="483.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="88.7" y="494.0"></text>
</g>
<g>
<title>org/apache/kafka/common/message/OffsetCommitResponseData.&lt;init&gt; (1 samples, 0.34%)</title><rect x="85.7" y="467.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="88.7" y="478.0"></text>
</g>
<g>
<title>org/apache/kafka/common/message/OffsetCommitResponseData.fromStruct (1 samples, 0.34%)</title><rect x="85.7" y="451.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="88.7" y="462.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.poll (3 samples, 1.01%)</title><rect x="89.7" y="515.0" width="12.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="92.7" y="526.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (1 samples, 0.34%)</title><rect x="89.7" y="499.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="92.7" y="510.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (1 samples, 0.34%)</title><rect x="89.7" y="483.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="92.7" y="494.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/stats/SampledStat.record (1 samples, 0.34%)</title><rect x="89.7" y="467.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="92.7" y="478.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/stats/SampledStat.current (1 samples, 0.34%)</title><rect x="89.7" y="451.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="92.7" y="462.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/stats/Avg.update (1 samples, 0.34%)</title><rect x="89.7" y="435.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="92.7" y="446.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.pollSelectionKeys (2 samples, 0.68%)</title><rect x="93.7" y="499.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="96.7" y="510.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/695770246.linkToTargetMethod (1 samples, 0.34%)</title><rect x="93.7" y="483.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="96.7" y="494.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/2067231386.invokeStatic_JJ_L (1 samples, 0.34%)</title><rect x="93.7" y="467.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="96.7" y="478.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/KafkaChannel.write (1 samples, 0.34%)</title><rect x="97.7" y="483.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="100.7" y="494.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/KafkaChannel.send (1 samples, 0.34%)</title><rect x="97.7" y="467.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="100.7" y="478.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/PlaintextTransportLayer.removeInterestOps (1 samples, 0.34%)</title><rect x="97.7" y="451.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.7" y="462.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.interestOps (1 samples, 0.34%)</title><rect x="97.7" y="435.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="100.7" y="446.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.nioInterestOps (1 samples, 0.34%)</title><rect x="97.7" y="419.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="100.7" y="430.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetInterestOps (1 samples, 0.34%)</title><rect x="97.7" y="403.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="100.7" y="414.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer$$Lambda$255/1311128923.shouldBlock (1 samples, 0.34%)</title><rect x="101.7" y="531.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="104.7" y="542.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/KafkaConsumer.lambda$pollForFetches$1 (1 samples, 0.34%)</title><rect x="101.7" y="515.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.7" y="526.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.hasAvailableFetches (1 samples, 0.34%)</title><rect x="101.7" y="499.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.7" y="510.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.34%)</title><rect x="101.7" y="483.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="104.7" y="494.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.34%)</title><rect x="101.7" y="467.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="104.7" y="478.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.34%)</title><rect x="101.7" y="451.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.7" y="462.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.34%)</title><rect x="101.7" y="435.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="104.7" y="446.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.fetchedRecords (1 samples, 0.34%)</title><rect x="105.7" y="563.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.7" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.add (1 samples, 0.34%)</title><rect x="105.7" y="547.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="108.7" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.addLast (1 samples, 0.34%)</title><rect x="105.7" y="531.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="108.7" y="542.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.sendFetches (1 samples, 0.34%)</title><rect x="109.7" y="563.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="112.7" y="574.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/Fetcher.prepareFetchRequests (1 samples, 0.34%)</title><rect x="109.7" y="547.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="112.7" y="558.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/SubscriptionState.assignedPartitions (1 samples, 0.34%)</title><rect x="109.7" y="531.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="112.7" y="542.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.34%)</title><rect x="109.7" y="515.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.7" y="526.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1 samples, 0.34%)</title><rect x="109.7" y="499.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="112.7" y="510.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.34%)</title><rect x="109.7" y="483.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="112.7" y="494.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.34%)</title><rect x="109.7" y="467.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="112.7" y="478.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.34%)</title><rect x="109.7" y="451.0" width="3.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="112.7" y="462.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.34%)</title><rect x="109.7" y="435.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.7" y="446.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.transmitSends (2 samples, 0.68%)</title><rect x="113.6" y="579.0" width="8.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="116.6" y="590.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.poll (1 samples, 0.34%)</title><rect x="113.6" y="563.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="116.6" y="574.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.poll (1 samples, 0.34%)</title><rect x="113.6" y="547.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="116.6" y="558.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.select (1 samples, 0.34%)</title><rect x="113.6" y="531.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="116.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (1 samples, 0.34%)</title><rect x="113.6" y="515.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="116.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1 samples, 0.34%)</title><rect x="113.6" y="499.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="116.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1 samples, 0.34%)</title><rect x="113.6" y="483.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="116.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.poll (1 samples, 0.34%)</title><rect x="113.6" y="467.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="116.6" y="478.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.epollWait (1 samples, 0.34%)</title><rect x="113.6" y="451.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="116.6" y="462.0"></text>
</g>
<g>
<title>__GI_epoll_wait (1 samples, 0.34%)</title><rect x="113.6" y="435.0" width="4.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="116.6" y="446.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.trySend (1 samples, 0.34%)</title><rect x="117.6" y="563.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="120.6" y="574.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.send (1 samples, 0.34%)</title><rect x="117.6" y="547.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="120.6" y="558.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.doSend (1 samples, 0.34%)</title><rect x="117.6" y="531.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="120.6" y="542.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.doSend (1 samples, 0.34%)</title><rect x="117.6" y="515.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="120.6" y="526.0"></text>
</g>
<g>
<title>org/apache/kafka/common/requests/AbstractRequest.toSend (1 samples, 0.34%)</title><rect x="117.6" y="499.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="120.6" y="510.0"></text>
</g>
<g>
<title>org/apache/kafka/common/requests/AbstractRequest.serialize (1 samples, 0.34%)</title><rect x="117.6" y="483.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.6" y="494.0"></text>
</g>
<g>
<title>org/apache/kafka/common/requests/RequestHeader.toStruct (1 samples, 0.34%)</title><rect x="117.6" y="467.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="120.6" y="478.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/KafkaConsumerMetrics.recordPollEnd (1 samples, 0.34%)</title><rect x="121.6" y="579.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="124.6" y="590.0"></text>
</g>
<g>
<title>org/apache/kafka/common/metrics/Sensor.record (1 samples, 0.34%)</title><rect x="121.6" y="563.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.6" y="574.0"></text>
</g>
<g>
<title>java/lang/Thread.run (229 samples, 77.36%)</title><rect x="125.6" y="643.0" width="912.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="128.6" y="654.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (229 samples, 77.36%)</title><rect x="125.6" y="627.0" width="912.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="128.6" y="638.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (229 samples, 77.36%)</title><rect x="125.6" y="611.0" width="912.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="128.6" y="622.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessorUnit$$Lambda$279/1524458463.run (219 samples, 73.99%)</title><rect x="125.6" y="595.0" width="873.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="128.6" y="606.0">com/linecorp/decaton/processor/runtime/internal/ProcessorUnit$$Lambda$279/1524458463.run</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessorUnit.lambda$putTask$66 (219 samples, 73.99%)</title><rect x="125.6" y="579.0" width="873.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="128.6" y="590.0">com/linecorp/decaton/processor/runtime/internal/ProcessorUnit.lambda$putTask$66</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessorUnit.processTask (219 samples, 73.99%)</title><rect x="125.6" y="563.0" width="873.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="128.6" y="574.0">com/linecorp/decaton/processor/runtime/internal/ProcessorUnit.processTask</text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.68%)</title><rect x="125.6" y="547.0" width="8.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="128.6" y="558.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.68%)</title><rect x="125.6" y="531.0" width="8.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="128.6" y="542.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessPipeline.scheduleThenProcess (210 samples, 70.95%)</title><rect x="133.6" y="547.0" width="837.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="136.6" y="558.0">com/linecorp/decaton/processor/runtime/internal/ProcessPipeline.scheduleThenProcess</text>
</g>
<g>
<title>[unknown] (1 samples, 0.34%)</title><rect x="141.6" y="531.0" width="3.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="144.6" y="542.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.34%)</title><rect x="141.6" y="515.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="144.6" y="526.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessPipeline.extract (33 samples, 11.15%)</title><rect x="145.5" y="531.0" width="131.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="148.5" y="542.0">com/linecorp/dec..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/DecatonRunner$$Lambda$41/867148091.extract (33 samples, 11.15%)</title><rect x="145.5" y="515.0" width="131.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="148.5" y="526.0">com/linecorp/dec..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/DecatonRunner.lambda$init$13 (33 samples, 11.15%)</title><rect x="145.5" y="499.0" width="131.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="148.5" y="510.0">com/linecorp/dec..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.34%)</title><rect x="145.5" y="483.0" width="4.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="148.5" y="494.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.34%)</title><rect x="145.5" y="467.0" width="4.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="148.5" y="478.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.34%)</title><rect x="145.5" y="451.0" width="4.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="148.5" y="462.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.34%)</title><rect x="145.5" y="435.0" width="4.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="148.5" y="446.0"></text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Task$KafkaDeserializer.deserialize (32 samples, 10.81%)</title><rect x="149.5" y="483.0" width="127.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="152.5" y="494.0">com/linecorp/dec..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Task$KafkaDeserializer.deserialize (32 samples, 10.81%)</title><rect x="149.5" y="467.0" width="127.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="152.5" y="478.0">com/linecorp/dec..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.readValue (32 samples, 10.81%)</title><rect x="149.5" y="451.0" width="127.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="152.5" y="462.0">com/fasterxml/ja..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory.createParser (8 samples, 2.70%)</title><rect x="149.5" y="435.0" width="31.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="152.5" y="446.0">co..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._createContext (4 samples, 1.35%)</title><rect x="149.5" y="419.0" width="16.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="152.5" y="430.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._getBufferRecycler (4 samples, 1.35%)</title><rect x="149.5" y="403.0" width="16.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="152.5" y="414.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory$Feature.enabledIn (3 samples, 1.01%)</title><rect x="149.5" y="387.0" width="12.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="152.5" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/BufferRecyclers.getBufferRecycler (1 samples, 0.34%)</title><rect x="161.5" y="387.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="164.5" y="398.0"></text>
</g>
<g>
<title>java/lang/ref/SoftReference.get (1 samples, 0.34%)</title><rect x="161.5" y="371.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="164.5" y="382.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/JsonFactory._createParser (4 samples, 1.35%)</title><rect x="165.5" y="419.0" width="15.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="168.5" y="430.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.constructParser (4 samples, 1.35%)</title><rect x="165.5" y="403.0" width="15.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="168.5" y="414.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.detectEncoding (1 samples, 0.34%)</title><rect x="165.5" y="387.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="168.5" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/ByteSourceJsonBootstrapper.checkUTF32 (1 samples, 0.34%)</title><rect x="165.5" y="371.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="168.5" y="382.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.&lt;init&gt; (2 samples, 0.68%)</title><rect x="169.5" y="387.0" width="7.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="172.5" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/base/ParserBase.&lt;init&gt; (1 samples, 0.34%)</title><rect x="173.4" y="371.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="176.4" y="382.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/io/IOContext.constructTextBuffer (1 samples, 0.34%)</title><rect x="173.4" y="355.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="176.4" y="366.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.makeChild (1 samples, 0.34%)</title><rect x="177.4" y="387.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="180.4" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._readMapAndClose (20 samples, 6.76%)</title><rect x="181.4" y="435.0" width="79.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="184.4" y="446.0">com/faste..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/base/ParserBase.close (1 samples, 0.34%)</title><rect x="181.4" y="419.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="184.4" y="430.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._releaseBuffers (1 samples, 0.34%)</title><rect x="181.4" y="403.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="184.4" y="414.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.release (1 samples, 0.34%)</title><rect x="181.4" y="387.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="184.4" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/util/TextBuffer.releaseBuffers (1 samples, 0.34%)</title><rect x="181.4" y="371.0" width="4.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="184.4" y="382.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._findRootDeserializer (1 samples, 0.34%)</title><rect x="185.4" y="419.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="188.4" y="430.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.34%)</title><rect x="185.4" y="403.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="188.4" y="414.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/DefaultDeserializationContext$Impl.createInstance (1 samples, 0.34%)</title><rect x="185.4" y="387.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="188.4" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper._initForReading (2 samples, 0.68%)</title><rect x="189.4" y="419.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="192.4" y="430.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (2 samples, 0.68%)</title><rect x="189.4" y="403.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="192.4" y="414.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._nextTokenNotInObject (1 samples, 0.34%)</title><rect x="189.4" y="387.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="192.4" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/JsonReadContext.createChildObjectContext (1 samples, 0.34%)</title><rect x="189.4" y="371.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="192.4" y="382.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._skipWSOrEnd (1 samples, 0.34%)</title><rect x="193.4" y="387.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="196.4" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/ObjectMapper.createDeserializationContext (1 samples, 0.34%)</title><rect x="197.4" y="419.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="200.4" y="430.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/DefaultDeserializationContext$Impl.createInstance (1 samples, 0.34%)</title><rect x="197.4" y="403.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="200.4" y="414.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer.deserialize (15 samples, 5.07%)</title><rect x="201.4" y="419.0" width="59.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="204.4" y="430.0">com/fa..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (4 samples, 1.35%)</title><rect x="201.4" y="403.0" width="15.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="204.4" y="414.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseName (1 samples, 0.34%)</title><rect x="201.4" y="387.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="204.4" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName (1 samples, 0.34%)</title><rect x="201.4" y="371.0" width="3.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.4" y="382.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName2 (1 samples, 0.34%)</title><rect x="201.4" y="355.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="204.4" y="366.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parsePosNumber (3 samples, 1.01%)</title><rect x="205.3" y="387.0" width="12.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="208.3" y="398.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer.deserializeFromObject (11 samples, 3.72%)</title><rect x="217.3" y="403.0" width="43.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="220.3" y="414.0">com/..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializerBase.deserializeFromObjectUsingNonDefault (11 samples, 3.72%)</title><rect x="217.3" y="387.0" width="43.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="220.3" y="398.0">com/..</text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer._deserializeUsingPropertyBased (11 samples, 3.72%)</title><rect x="217.3" y="371.0" width="43.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="220.3" y="382.0">com/..</text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.nextToken (2 samples, 0.68%)</title><rect x="217.3" y="355.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="220.3" y="366.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser._parseName (2 samples, 0.68%)</title><rect x="217.3" y="339.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="220.3" y="350.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName (2 samples, 0.68%)</title><rect x="217.3" y="323.0" width="8.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="220.3" y="334.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseMediumName2 (2 samples, 0.68%)</title><rect x="217.3" y="307.0" width="8.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="220.3" y="318.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/core/json/UTF8StreamJsonParser.parseLongName (1 samples, 0.34%)</title><rect x="221.3" y="291.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="224.3" y="302.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/BeanDeserializer._deserializeWithErrorWrapping (5 samples, 1.69%)</title><rect x="225.3" y="355.0" width="19.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="228.3" y="366.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/SettableBeanProperty.deserialize (4 samples, 1.35%)</title><rect x="229.3" y="339.0" width="15.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="232.3" y="350.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/std/NumberDeserializers$LongDeserializer.deserialize (4 samples, 1.35%)</title><rect x="229.3" y="323.0" width="15.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="232.3" y="334.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/std/NumberDeserializers$LongDeserializer.deserialize (4 samples, 1.35%)</title><rect x="229.3" y="307.0" width="15.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="232.3" y="318.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (4 samples, 1.35%)</title><rect x="229.3" y="291.0" width="15.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="232.3" y="302.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/impl/PropertyBasedCreator.build (1 samples, 0.34%)</title><rect x="245.2" y="355.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="248.2" y="366.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/ValueInstantiator.createFromObjectWith (1 samples, 0.34%)</title><rect x="245.2" y="339.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="248.2" y="350.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/std/StdValueInstantiator.createFromObjectWith (1 samples, 0.34%)</title><rect x="245.2" y="323.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="248.2" y="334.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/introspect/AnnotatedConstructor.call (1 samples, 0.34%)</title><rect x="245.2" y="307.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="248.2" y="318.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (1 samples, 0.34%)</title><rect x="245.2" y="291.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="248.2" y="302.0"></text>
</g>
<g>
<title>sun/reflect/DelegatingConstructorAccessorImpl.newInstance (1 samples, 0.34%)</title><rect x="245.2" y="275.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="248.2" y="286.0"></text>
</g>
<g>
<title>sun/reflect/NativeConstructorAccessorImpl.newInstance (1 samples, 0.34%)</title><rect x="245.2" y="259.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="248.2" y="270.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/impl/PropertyBasedCreator.findCreatorProperty (2 samples, 0.68%)</title><rect x="249.2" y="355.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="252.2" y="366.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.68%)</title><rect x="249.2" y="339.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="252.2" y="350.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.68%)</title><rect x="249.2" y="323.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="252.2" y="334.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/impl/PropertyBasedCreator.startBuilding (1 samples, 0.34%)</title><rect x="257.2" y="355.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="260.2" y="366.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/deser/impl/PropertyValueBuffer.&lt;init&gt; (1 samples, 0.34%)</title><rect x="257.2" y="339.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="260.2" y="350.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory.constructType (4 samples, 1.35%)</title><rect x="261.1" y="435.0" width="16.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="264.1" y="446.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory._fromAny (4 samples, 1.35%)</title><rect x="261.1" y="419.0" width="16.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="264.1" y="430.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/type/TypeFactory._fromClass (4 samples, 1.35%)</title><rect x="261.1" y="403.0" width="16.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="264.1" y="414.0"></text>
</g>
<g>
<title>com/fasterxml/jackson/databind/util/LRUMap.get (4 samples, 1.35%)</title><rect x="261.1" y="387.0" width="16.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="264.1" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (3 samples, 1.01%)</title><rect x="265.1" y="371.0" width="12.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="268.1" y="382.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessPipeline.process (155 samples, 52.36%)</title><rect x="277.1" y="531.0" width="617.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="280.1" y="542.0">com/linecorp/decaton/processor/runtime/internal/ProcessPipeline.process</text>
</g>
<g>
<title>com/linecorp/decaton/processor/LoggingContext.close (21 samples, 7.09%)</title><rect x="277.1" y="515.0" width="83.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.1" y="526.0">com/linec..</text>
</g>
<g>
<title>org/slf4j/MDC.remove (21 samples, 7.09%)</title><rect x="277.1" y="499.0" width="83.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="280.1" y="510.0">org/slf4j..</text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.remove (18 samples, 6.08%)</title><rect x="289.1" y="483.0" width="71.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="292.1" y="494.0">ch/qos/l..</text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getAndSetLastOperation (3 samples, 1.01%)</title><rect x="305.0" y="467.0" width="12.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="308.0" y="478.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.34%)</title><rect x="305.0" y="451.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="308.0" y="462.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.34%)</title><rect x="309.0" y="451.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="312.0" y="462.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.34%)</title><rect x="309.0" y="435.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="312.0" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.34%)</title><rect x="309.0" y="419.0" width="4.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="312.0" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.34%)</title><rect x="313.0" y="451.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="316.0" y="462.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$100 (1 samples, 0.34%)</title><rect x="313.0" y="435.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="316.0" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.34%)</title><rect x="313.0" y="419.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="316.0" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.68%)</title><rect x="317.0" y="467.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="320.0" y="478.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.34%)</title><rect x="320.9" y="451.0" width="4.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="323.9" y="462.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.34%)</title><rect x="320.9" y="435.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="323.9" y="446.0"></text>
</g>
<g>
<title>java/util/Collections$SynchronizedMap.remove (9 samples, 3.04%)</title><rect x="324.9" y="467.0" width="35.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="327.9" y="478.0">jav..</text>
</g>
<g>
<title>java/util/HashMap.remove (7 samples, 2.36%)</title><rect x="332.9" y="451.0" width="27.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="335.9" y="462.0">j..</text>
</g>
<g>
<title>java/util/HashMap.removeNode (7 samples, 2.36%)</title><rect x="332.9" y="435.0" width="27.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="335.9" y="446.0">j..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessingContextImpl.&lt;init&gt; (5 samples, 1.69%)</title><rect x="360.8" y="515.0" width="19.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="363.8" y="526.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessingContextImpl.&lt;init&gt; (4 samples, 1.35%)</title><rect x="364.8" y="499.0" width="15.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="367.8" y="510.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (4 samples, 1.35%)</title><rect x="364.8" y="483.0" width="15.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="367.8" y="494.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessingContextImpl.loggingContext (34 samples, 11.49%)</title><rect x="380.7" y="515.0" width="135.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="383.7" y="526.0">com/linecorp/deca..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/LoggingContext.&lt;init&gt; (34 samples, 11.49%)</title><rect x="380.7" y="499.0" width="135.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="383.7" y="510.0">com/linecorp/deca..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/TaskMetadata.toString (20 samples, 6.76%)</title><rect x="384.7" y="483.0" width="79.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="387.7" y="494.0">com/linec..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (7 samples, 2.36%)</title><rect x="420.6" y="467.0" width="27.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="423.6" y="478.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (7 samples, 2.36%)</title><rect x="420.6" y="451.0" width="27.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="423.6" y="462.0">j..</text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 1.01%)</title><rect x="432.6" y="435.0" width="11.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="435.6" y="446.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.expandCapacity (3 samples, 1.01%)</title><rect x="432.6" y="419.0" width="11.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="435.6" y="430.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 1.01%)</title><rect x="432.6" y="403.0" width="11.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="435.6" y="414.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 1.01%)</title><rect x="432.6" y="387.0" width="11.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="435.6" y="398.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.34%)</title><rect x="432.6" y="371.0" width="4.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="435.6" y="382.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.68%)</title><rect x="436.6" y="371.0" width="7.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="439.6" y="382.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.34%)</title><rect x="440.5" y="355.0" width="4.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="443.5" y="366.0"></text>
</g>
<g>
<title>G1OffsetTableContigSpace::free() const (1 samples, 0.34%)</title><rect x="440.5" y="339.0" width="4.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="443.5" y="350.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.34%)</title><rect x="444.5" y="435.0" width="4.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="447.5" y="446.0"></text>
</g>
<g>
<title>jshort_disjoint_arraycopy (4 samples, 1.35%)</title><rect x="448.5" y="467.0" width="16.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="451.5" y="478.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.34%)</title><rect x="464.5" y="483.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="467.5" y="494.0"></text>
</g>
<g>
<title>java/lang/Long.toString (1 samples, 0.34%)</title><rect x="464.5" y="467.0" width="3.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="467.5" y="478.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.34%)</title><rect x="464.5" y="451.0" width="3.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="467.5" y="462.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.34%)</title><rect x="464.5" y="435.0" width="3.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="467.5" y="446.0"></text>
</g>
<g>
<title>CollectedHeap::allocate_from_tlab_slow(KlassHandle, Thread*, unsigned long) (1 samples, 0.34%)</title><rect x="464.5" y="419.0" width="3.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="467.5" y="430.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long) (1 samples, 0.34%)</title><rect x="464.5" y="403.0" width="3.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="467.5" y="414.0"></text>
</g>
<g>
<title>org/slf4j/MDC.put (12 samples, 4.05%)</title><rect x="468.4" y="483.0" width="47.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="471.4" y="494.0">org/..</text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.put (11 samples, 3.72%)</title><rect x="472.4" y="467.0" width="43.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="475.4" y="478.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getAndSetLastOperation (1 samples, 0.34%)</title><rect x="472.4" y="451.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="475.4" y="462.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.34%)</title><rect x="472.4" y="435.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="475.4" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$100 (1 samples, 0.34%)</title><rect x="472.4" y="419.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="475.4" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.34%)</title><rect x="472.4" y="403.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="475.4" y="414.0"></text>
</g>
<g>
<title>java/util/Collections$SynchronizedMap.put (10 samples, 3.38%)</title><rect x="476.4" y="451.0" width="39.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="479.4" y="462.0">jav..</text>
</g>
<g>
<title>java/util/HashMap.put (10 samples, 3.38%)</title><rect x="476.4" y="435.0" width="39.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="479.4" y="446.0">jav..</text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 1.69%)</title><rect x="496.4" y="419.0" width="19.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="499.4" y="430.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (1 samples, 0.34%)</title><rect x="512.3" y="403.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="515.3" y="414.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessingContextImpl.push (88 samples, 29.73%)</title><rect x="516.3" y="515.0" width="350.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="519.3" y="526.0">com/linecorp/decaton/processor/runtime/internal/..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessingContextImpl.pushDownStream (88 samples, 29.73%)</title><rect x="516.3" y="499.0" width="350.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="519.3" y="510.0">com/linecorp/decaton/processor/runtime/internal/..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.34%)</title><rect x="520.3" y="483.0" width="4.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="523.3" y="494.0"></text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/DecatonRunner$$Lambda$206/1563401438.process (77 samples, 26.01%)</title><rect x="524.3" y="483.0" width="306.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="527.3" y="494.0">com/linecorp/decaton/benchmark/DecatonRun..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/DecatonRunner.lambda$null$14 (77 samples, 26.01%)</title><rect x="524.3" y="467.0" width="306.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="527.3" y="478.0">com/linecorp/decaton/benchmark/DecatonRun..</text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Recording.process (77 samples, 26.01%)</title><rect x="524.3" y="451.0" width="306.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="527.3" y="462.0">com/linecorp/decaton/benchmark/Recording...</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isTraceEnabled (2 samples, 0.68%)</title><rect x="528.2" y="435.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="531.2" y="446.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isTraceEnabled (2 samples, 0.68%)</title><rect x="528.2" y="419.0" width="8.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="531.2" y="430.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callTurboFilters (2 samples, 0.68%)</title><rect x="528.2" y="403.0" width="8.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="531.2" y="414.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_0_3OrMore (2 samples, 0.68%)</title><rect x="528.2" y="387.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="531.2" y="398.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.size (2 samples, 0.68%)</title><rect x="528.2" y="371.0" width="8.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="531.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.getArray (1 samples, 0.34%)</title><rect x="532.2" y="355.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="535.2" y="366.0"></text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/Recording$ChildRecording.process (71 samples, 23.99%)</title><rect x="536.2" y="435.0" width="283.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="539.2" y="446.0">com/linecorp/decaton/benchmark/Recordi..</text>
</g>
<g>
<title>java/lang/Thread.sleep (71 samples, 23.99%)</title><rect x="536.2" y="419.0" width="283.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="539.2" y="430.0">java/lang/Thread.sleep</text>
</g>
<g>
<title>JVM_Sleep (64 samples, 21.62%)</title><rect x="556.1" y="403.0" width="255.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="559.1" y="414.0">JVM_Sleep</text>
</g>
<g>
<title>HandleMarkCleaner::~HandleMarkCleaner() (2 samples, 0.68%)</title><rect x="588.0" y="387.0" width="8.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="591.0" y="398.0"></text>
</g>
<g>
<title>__clock_gettime (4 samples, 1.35%)</title><rect x="596.0" y="387.0" width="16.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="599.0" y="398.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 1.01%)</title><rect x="600.0" y="371.0" width="12.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="603.0" y="382.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 1.01%)</title><rect x="612.0" y="387.0" width="11.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="615.0" y="398.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.34%)</title><rect x="623.9" y="387.0" width="4.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="626.9" y="398.0"></text>
</g>
<g>
<title>os::sleep(Thread*, long, bool) (46 samples, 15.54%)</title><rect x="627.9" y="387.0" width="183.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="630.9" y="398.0">os::sleep(Thread*, long,..</text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.68%)</title><rect x="679.7" y="371.0" width="8.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="682.7" y="382.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (2 samples, 0.68%)</title><rect x="679.7" y="355.0" width="8.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="682.7" y="366.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.34%)</title><rect x="687.7" y="371.0" width="4.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="690.7" y="382.0"></text>
</g>
<g>
<title>__clock_gettime (2 samples, 0.68%)</title><rect x="691.7" y="371.0" width="8.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="694.7" y="382.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.34%)</title><rect x="695.7" y="355.0" width="4.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="698.7" y="366.0"></text>
</g>
<g>
<title>__lll_unlock_wake (7 samples, 2.36%)</title><rect x="699.7" y="371.0" width="27.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="702.7" y="382.0">_..</text>
</g>
<g>
<title>__pthread_cond_init (5 samples, 1.69%)</title><rect x="727.6" y="371.0" width="19.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="730.6" y="382.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (13 samples, 4.39%)</title><rect x="747.5" y="371.0" width="51.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="750.5" y="382.0">__pth..</text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.34%)</title><rect x="799.3" y="371.0" width="4.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="802.3" y="382.0"></text>
</g>
<g>
<title>_init (1 samples, 0.34%)</title><rect x="803.3" y="371.0" width="4.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="806.3" y="382.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.34%)</title><rect x="807.3" y="371.0" width="4.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="810.3" y="382.0"></text>
</g>
<g>
<title>JavaThread::thread_from_jni_environment(JNIEnv_*) (1 samples, 0.34%)</title><rect x="811.3" y="403.0" width="4.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="814.3" y="414.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.34%)</title><rect x="815.3" y="403.0" width="4.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="818.3" y="414.0"></text>
</g>
<g>
<title>com/linecorp/decaton/benchmark/ResourceTracker.track (2 samples, 0.68%)</title><rect x="819.3" y="435.0" width="7.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="822.3" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.34%)</title><rect x="827.2" y="435.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="830.2" y="446.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.access$000 (1 samples, 0.34%)</title><rect x="827.2" y="419.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="830.2" y="430.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.34%)</title><rect x="827.2" y="403.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="830.2" y="414.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/DecatonTask.&lt;init&gt; (1 samples, 0.34%)</title><rect x="831.2" y="483.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="834.2" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.isEmpty (1 samples, 0.34%)</title><rect x="835.2" y="483.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="838.2" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.size (3 samples, 1.01%)</title><rect x="839.2" y="483.0" width="11.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="842.2" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.size (3 samples, 1.01%)</title><rect x="839.2" y="467.0" width="11.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="842.2" y="478.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.34%)</title><rect x="839.2" y="451.0" width="4.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="842.2" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.size (2 samples, 0.68%)</title><rect x="843.2" y="451.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="846.2" y="462.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableList.get (1 samples, 0.34%)</title><rect x="851.1" y="483.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="854.1" y="494.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableList.get (1 samples, 0.34%)</title><rect x="851.1" y="467.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="854.1" y="478.0"></text>
</g>
<g>
<title>java/util/ArrayList.get (1 samples, 0.34%)</title><rect x="851.1" y="451.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="854.1" y="462.0"></text>
</g>
<g>
<title>java/util/ArrayList.elementData (1 samples, 0.34%)</title><rect x="851.1" y="435.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="854.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.get (3 samples, 1.01%)</title><rect x="855.1" y="483.0" width="12.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="858.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (7 samples, 2.36%)</title><rect x="867.1" y="515.0" width="27.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="870.1" y="526.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (7 samples, 2.36%)</title><rect x="867.1" y="499.0" width="27.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="870.1" y="510.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (19 samples, 6.42%)</title><rect x="895.0" y="531.0" width="75.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="898.0" y="542.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (19 samples, 6.42%)</title><rect x="895.0" y="515.0" width="75.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="898.0" y="526.0">java/uti..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessPipeline.process (1 samples, 0.34%)</title><rect x="910.9" y="499.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="913.9" y="510.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (14 samples, 4.73%)</title><rect x="914.9" y="499.0" width="55.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="917.9" y="510.0">java/..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessPipeline$$Lambda$292/1775449526.accept (1 samples, 0.34%)</title><rect x="914.9" y="483.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="917.9" y="494.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessPipeline.lambda$process$61 (1 samples, 0.34%)</title><rect x="914.9" y="467.0" width="4.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="917.9" y="478.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/Utils$Timer.duration (1 samples, 0.34%)</title><rect x="914.9" y="451.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="917.9" y="462.0"></text>
</g>
<g>
<title>java/time/Duration.ofNanos (1 samples, 0.34%)</title><rect x="914.9" y="435.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="917.9" y="446.0"></text>
</g>
<g>
<title>java/time/Duration.create (1 samples, 0.34%)</title><rect x="914.9" y="419.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="917.9" y="430.0"></text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessPipeline$$Lambda$296/2093272102.accept (13 samples, 4.39%)</title><rect x="918.9" y="483.0" width="51.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="921.9" y="494.0">com/l..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/ProcessPipeline.lambda$scheduleThenProcess$60 (13 samples, 4.39%)</title><rect x="918.9" y="467.0" width="51.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="921.9" y="478.0">com/l..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription$Handler$$Lambda$277/2112572733.complete (13 samples, 4.39%)</title><rect x="918.9" y="451.0" width="51.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="921.9" y="462.0">com/l..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/ProcessorSubscription$Handler.lambda$wrapForTracing$37 (13 samples, 4.39%)</title><rect x="918.9" y="435.0" width="51.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="921.9" y="446.0">com/l..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/OutOfOrderCommitControl$$Lambda$276/715318889.complete (13 samples, 4.39%)</title><rect x="918.9" y="419.0" width="51.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="921.9" y="430.0">com/l..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/OutOfOrderCommitControl.lambda$reportFetchedOffset$65 (13 samples, 4.39%)</title><rect x="918.9" y="403.0" width="51.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="921.9" y="414.0">com/l..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/OutOfOrderCommitControl.complete (13 samples, 4.39%)</title><rect x="918.9" y="387.0" width="51.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="921.9" y="398.0">com/l..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isDebugEnabled (13 samples, 4.39%)</title><rect x="918.9" y="371.0" width="51.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="921.9" y="382.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.isDebugEnabled (13 samples, 4.39%)</title><rect x="918.9" y="355.0" width="51.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="921.9" y="366.0">ch/qo..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callTurboFilters (13 samples, 4.39%)</title><rect x="918.9" y="339.0" width="51.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="921.9" y="350.0">ch/qo..</text>
</g>
<g>
<title>com/linecorp/decaton/processor/runtime/internal/Utils.timer (7 samples, 2.36%)</title><rect x="970.7" y="547.0" width="27.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="973.7" y="558.0">c..</text>
</g>
<g>
<title>__clock_gettime (1 samples, 0.34%)</title><rect x="990.7" y="531.0" width="4.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="993.7" y="542.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.34%)</title><rect x="990.7" y="515.0" width="4.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="993.7" y="526.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.34%)</title><rect x="994.7" y="531.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="997.7" y="542.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (10 samples, 3.38%)</title><rect x="998.6" y="595.0" width="39.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1001.6" y="606.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (7 samples, 2.36%)</title><rect x="1010.6" y="579.0" width="27.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1013.6" y="590.0">j..</text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/AbstractCoordinator$HeartbeatThread.run (2 samples, 0.68%)</title><rect x="1038.5" y="643.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1041.5" y="654.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.pollNoWakeup (1 samples, 0.34%)</title><rect x="1042.5" y="627.0" width="4.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1045.5" y="638.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.poll (1 samples, 0.34%)</title><rect x="1042.5" y="611.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1045.5" y="622.0"></text>
</g>
<g>
<title>org/apache/kafka/clients/NetworkClient.poll (1 samples, 0.34%)</title><rect x="1042.5" y="595.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1045.5" y="606.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.poll (1 samples, 0.34%)</title><rect x="1042.5" y="579.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1045.5" y="590.0"></text>
</g>
<g>
<title>org/apache/kafka/common/network/Selector.select (1 samples, 0.34%)</title><rect x="1042.5" y="563.0" width="4.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1045.5" y="574.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (1 samples, 0.34%)</title><rect x="1042.5" y="547.0" width="4.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1045.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (1 samples, 0.34%)</title><rect x="1042.5" y="531.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1045.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (1 samples, 0.34%)</title><rect x="1042.5" y="515.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1045.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.poll (1 samples, 0.34%)</title><rect x="1042.5" y="499.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1045.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollArrayWrapper.epollWait (1 samples, 0.34%)</title><rect x="1042.5" y="483.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1045.5" y="494.0"></text>
</g>
<g>
<title>start_thread (36 samples, 12.16%)</title><rect x="1046.5" y="643.0" width="143.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1049.5" y="654.0">start_thread</text>
</g>
<g>
<title>java_start(Thread*) (36 samples, 12.16%)</title><rect x="1046.5" y="627.0" width="143.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1049.5" y="638.0">java_start(Thread*)</text>
</g>
<g>
<title>GangWorker::loop() (9 samples, 3.04%)</title><rect x="1046.5" y="611.0" width="35.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1049.5" y="622.0">Gan..</text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (9 samples, 3.04%)</title><rect x="1046.5" y="595.0" width="35.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1049.5" y="606.0">G1P..</text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (9 samples, 3.04%)</title><rect x="1046.5" y="579.0" width="35.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1049.5" y="590.0">G1P..</text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (9 samples, 3.04%)</title><rect x="1046.5" y="563.0" width="35.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1049.5" y="574.0">G1P..</text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (6 samples, 2.03%)</title><rect x="1054.5" y="547.0" width="23.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1057.5" y="558.0">G..</text>
</g>
<g>
<title>G1ParGCAllocator::allocate_direct_or_new_plab(InCSetState, unsigned long, unsigned char) (1 samples, 0.34%)</title><rect x="1066.4" y="531.0" width="4.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1069.4" y="542.0"></text>
</g>
<g>
<title>G1CollectedHeap::par_allocate_during_gc(InCSetState, unsigned long, unsigned char) (1 samples, 0.34%)</title><rect x="1066.4" y="515.0" width="4.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1069.4" y="526.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.34%)</title><rect x="1066.4" y="499.0" width="4.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1069.4" y="510.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_gc_alloc_region(unsigned long, unsigned int, InCSetState) (1 samples, 0.34%)</title><rect x="1066.4" y="483.0" width="4.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1069.4" y="494.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_region(unsigned long, bool, bool) (1 samples, 0.34%)</title><rect x="1066.4" y="467.0" width="4.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1069.4" y="478.0"></text>
</g>
<g>
<title>Thread::is_VM_thread() const (1 samples, 0.34%)</title><rect x="1066.4" y="451.0" width="4.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1069.4" y="462.0"></text>
</g>
<g>
<title>InstanceKlass::oop_oop_iterate_backwards_nv(oopDesc*, G1ParScanClosure*) (2 samples, 0.68%)</title><rect x="1070.4" y="531.0" width="8.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1073.4" y="542.0"></text>
</g>
<g>
<title>OverflowTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;::push(StarTask) (1 samples, 0.34%)</title><rect x="1074.4" y="515.0" width="4.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1077.4" y="526.0"></text>
</g>
<g>
<title>__memmove_ssse3_back (1 samples, 0.34%)</title><rect x="1078.4" y="547.0" width="4.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1081.4" y="558.0"></text>
</g>
<g>
<title>JavaThread::run() (26 samples, 8.78%)</title><rect x="1082.4" y="611.0" width="103.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1085.4" y="622.0">JavaThread::..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (26 samples, 8.78%)</title><rect x="1082.4" y="595.0" width="103.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1085.4" y="606.0">JavaThread::..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (26 samples, 8.78%)</title><rect x="1082.4" y="579.0" width="103.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1085.4" y="590.0">CompileBroke..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (25 samples, 8.45%)</title><rect x="1082.4" y="563.0" width="99.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1085.4" y="574.0">CompileBroke..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int) (21 samples, 7.09%)</title><rect x="1082.4" y="547.0" width="83.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1085.4" y="558.0">C2Compile..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool) (21 samples, 7.09%)</title><rect x="1082.4" y="531.0" width="83.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1085.4" y="542.0">Compile::..</text>
</g>
<g>
<title>Compile::Code_Gen() (13 samples, 4.39%)</title><rect x="1082.4" y="515.0" width="51.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1085.4" y="526.0">Compi..</text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.34%)</title><rect x="1082.4" y="499.0" width="4.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1085.4" y="510.0"></text>
</g>
<g>
<title>shrL_rReg_immNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.34%)</title><rect x="1082.4" y="483.0" width="4.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1085.4" y="494.0"></text>
</g>
<g>
<title>Matcher::match() (1 samples, 0.34%)</title><rect x="1086.4" y="499.0" width="3.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1089.4" y="510.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 0.34%)</title><rect x="1086.4" y="483.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1089.4" y="494.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.34%)</title><rect x="1086.4" y="467.0" width="3.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1089.4" y="478.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.34%)</title><rect x="1086.4" y="451.0" width="3.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1089.4" y="462.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (1 samples, 0.34%)</title><rect x="1090.3" y="499.0" width="4.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1093.3" y="510.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (1 samples, 0.34%)</title><rect x="1090.3" y="483.0" width="4.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1093.3" y="494.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (10 samples, 3.38%)</title><rect x="1094.3" y="499.0" width="39.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1097.3" y="510.0">Pha..</text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.34%)</title><rect x="1094.3" y="483.0" width="4.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1097.3" y="494.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (4 samples, 1.35%)</title><rect x="1098.3" y="483.0" width="16.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1101.3" y="494.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.68%)</title><rect x="1114.3" y="483.0" width="7.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1117.3" y="494.0"></text>
</g>
<g>
<title>rRegPOper::type() const (1 samples, 0.34%)</title><rect x="1118.2" y="467.0" width="4.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1121.2" y="478.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.68%)</title><rect x="1122.2" y="483.0" width="8.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1125.2" y="494.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.34%)</title><rect x="1122.2" y="467.0" width="4.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1125.2" y="478.0"></text>
</g>
<g>
<title>PhaseChaitin::eliminate_copy_of_constant(Node*, Node*, Block*, Node_List&amp;, Node_List&amp;, int, int) (1 samples, 0.34%)</title><rect x="1126.2" y="467.0" width="4.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1129.2" y="478.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.34%)</title><rect x="1130.2" y="483.0" width="4.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1133.2" y="494.0"></text>
</g>
<g>
<title>Compile::Optimize() (5 samples, 1.69%)</title><rect x="1134.2" y="515.0" width="19.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1137.2" y="526.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 0.34%)</title><rect x="1134.2" y="499.0" width="4.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1137.2" y="510.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.34%)</title><rect x="1134.2" y="483.0" width="4.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1137.2" y="494.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (2 samples, 0.68%)</title><rect x="1138.2" y="499.0" width="7.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1141.2" y="510.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (2 samples, 0.68%)</title><rect x="1138.2" y="483.0" width="7.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1141.2" y="494.0"></text>
</g>
<g>
<title>ConnectionGraph::add_final_edges(Node*) (2 samples, 0.68%)</title><rect x="1138.2" y="467.0" width="7.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1141.2" y="478.0"></text>
</g>
<g>
<title>ConnectionGraph::process_call_arguments(CallNode*) (2 samples, 0.68%)</title><rect x="1138.2" y="451.0" width="7.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1141.2" y="462.0"></text>
</g>
<g>
<title>ciMethod::get_bcea() (2 samples, 0.68%)</title><rect x="1138.2" y="435.0" width="7.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1141.2" y="446.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (2 samples, 0.68%)</title><rect x="1138.2" y="419.0" width="7.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1141.2" y="430.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::compute_escape_info() (2 samples, 0.68%)</title><rect x="1138.2" y="403.0" width="7.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1141.2" y="414.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_blocks(Arena*) (2 samples, 0.68%)</title><rect x="1138.2" y="387.0" width="7.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1141.2" y="398.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&amp;, GrowableArray&lt;ciBlock*&gt;&amp;) (2 samples, 0.68%)</title><rect x="1138.2" y="371.0" width="7.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1141.2" y="382.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::invoke(BCEscapeAnalyzer::StateInfo&amp;, Bytecodes::Code, ciMethod*, ciKlass*) (2 samples, 0.68%)</title><rect x="1138.2" y="355.0" width="7.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1141.2" y="366.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (2 samples, 0.68%)</title><rect x="1138.2" y="339.0" width="7.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1141.2" y="350.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::compute_escape_info() (2 samples, 0.68%)</title><rect x="1138.2" y="323.0" width="7.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1141.2" y="334.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_blocks(Arena*) (2 samples, 0.68%)</title><rect x="1138.2" y="307.0" width="7.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1141.2" y="318.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&amp;, GrowableArray&lt;ciBlock*&gt;&amp;) (2 samples, 0.68%)</title><rect x="1138.2" y="291.0" width="7.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1141.2" y="302.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::invoke(BCEscapeAnalyzer::StateInfo&amp;, Bytecodes::Code, ciMethod*, ciKlass*) (1 samples, 0.34%)</title><rect x="1138.2" y="275.0" width="4.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1141.2" y="286.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (1 samples, 0.34%)</title><rect x="1138.2" y="259.0" width="4.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1141.2" y="270.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::compute_escape_info() (1 samples, 0.34%)</title><rect x="1138.2" y="243.0" width="4.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1141.2" y="254.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_blocks(Arena*) (1 samples, 0.34%)</title><rect x="1138.2" y="227.0" width="4.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1141.2" y="238.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&amp;, GrowableArray&lt;ciBlock*&gt;&amp;) (1 samples, 0.34%)</title><rect x="1138.2" y="211.0" width="4.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1141.2" y="222.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::invoke(BCEscapeAnalyzer::StateInfo&amp;, Bytecodes::Code, ciMethod*, ciKlass*) (1 samples, 0.34%)</title><rect x="1138.2" y="195.0" width="4.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1141.2" y="206.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (1 samples, 0.34%)</title><rect x="1138.2" y="179.0" width="4.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1141.2" y="190.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::compute_escape_info() (1 samples, 0.34%)</title><rect x="1138.2" y="163.0" width="4.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1141.2" y="174.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_blocks(Arena*) (1 samples, 0.34%)</title><rect x="1138.2" y="147.0" width="4.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1141.2" y="158.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&amp;, GrowableArray&lt;ciBlock*&gt;&amp;) (1 samples, 0.34%)</title><rect x="1138.2" y="131.0" width="4.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1141.2" y="142.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::invoke(BCEscapeAnalyzer::StateInfo&amp;, Bytecodes::Code, ciMethod*, ciKlass*) (1 samples, 0.34%)</title><rect x="1138.2" y="115.0" width="4.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1141.2" y="126.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (1 samples, 0.34%)</title><rect x="1138.2" y="99.0" width="4.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1141.2" y="110.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::compute_escape_info() (1 samples, 0.34%)</title><rect x="1138.2" y="83.0" width="4.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1141.2" y="94.0"></text>
</g>
<g>
<title>ciMethod::get_method_blocks() (1 samples, 0.34%)</title><rect x="1138.2" y="67.0" width="4.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1141.2" y="78.0"></text>
</g>
<g>
<title>ciMethodBlocks::ciMethodBlocks(Arena*, ciMethod*) (1 samples, 0.34%)</title><rect x="1138.2" y="51.0" width="4.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1141.2" y="62.0"></text>
</g>
<g>
<title>ciMethodBlocks::do_analysis() (1 samples, 0.34%)</title><rect x="1138.2" y="35.0" width="4.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1141.2" y="46.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.34%)</title><rect x="1142.2" y="275.0" width="3.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1145.2" y="286.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.34%)</title><rect x="1142.2" y="259.0" width="3.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1145.2" y="270.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.34%)</title><rect x="1142.2" y="243.0" width="3.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1145.2" y="254.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(InstanceKlass*, InstanceKlass*, Symbol*, Symbol*, Bytecodes::Code) (1 samples, 0.34%)</title><rect x="1142.2" y="227.0" width="3.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1145.2" y="238.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_interface_method_or_null(KlassHandle, Symbol*, Symbol*, KlassHandle, bool) (1 samples, 0.34%)</title><rect x="1142.2" y="211.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1145.2" y="222.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(methodHandle&amp;, KlassHandle, Symbol*, Symbol*, KlassHandle, bool, bool, Thread*) (1 samples, 0.34%)</title><rect x="1142.2" y="195.0" width="3.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1145.2" y="206.0"></text>
</g>
<g>
<title>SystemDictionary::check_signature_loaders(Symbol*, Handle, Handle, bool, Thread*) (1 samples, 0.34%)</title><rect x="1142.2" y="179.0" width="3.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1145.2" y="190.0"></text>
</g>
<g>
<title>SignatureStream::next_non_primitive(int) (1 samples, 0.34%)</title><rect x="1142.2" y="163.0" width="3.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1145.2" y="174.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool) (2 samples, 0.68%)</title><rect x="1146.1" y="499.0" width="8.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1149.1" y="510.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.68%)</title><rect x="1146.1" y="483.0" width="8.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1149.1" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.68%)</title><rect x="1154.1" y="515.0" width="8.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1157.1" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.68%)</title><rect x="1154.1" y="499.0" width="8.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1157.1" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.68%)</title><rect x="1154.1" y="483.0" width="8.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1157.1" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.68%)</title><rect x="1154.1" y="467.0" width="8.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1157.1" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.68%)</title><rect x="1154.1" y="451.0" width="8.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1157.1" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.34%)</title><rect x="1154.1" y="435.0" width="4.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1157.1" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.34%)</title><rect x="1154.1" y="419.0" width="4.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1157.1" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.34%)</title><rect x="1154.1" y="403.0" width="4.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1157.1" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.34%)</title><rect x="1154.1" y="387.0" width="4.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1157.1" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.34%)</title><rect x="1154.1" y="371.0" width="4.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1157.1" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.34%)</title><rect x="1154.1" y="355.0" width="4.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1157.1" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.34%)</title><rect x="1154.1" y="339.0" width="4.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1157.1" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.34%)</title><rect x="1154.1" y="323.0" width="4.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1157.1" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.34%)</title><rect x="1154.1" y="307.0" width="4.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1157.1" y="318.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.34%)</title><rect x="1154.1" y="291.0" width="4.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1157.1" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.34%)</title><rect x="1154.1" y="275.0" width="4.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1157.1" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.34%)</title><rect x="1154.1" y="259.0" width="4.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1157.1" y="270.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.34%)</title><rect x="1154.1" y="243.0" width="4.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1157.1" y="254.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.34%)</title><rect x="1154.1" y="227.0" width="4.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1157.1" y="238.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.34%)</title><rect x="1154.1" y="211.0" width="4.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1157.1" y="222.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.34%)</title><rect x="1154.1" y="195.0" width="4.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1157.1" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.34%)</title><rect x="1154.1" y="179.0" width="4.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1157.1" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.34%)</title><rect x="1154.1" y="163.0" width="4.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1157.1" y="174.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.34%)</title><rect x="1154.1" y="147.0" width="4.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1157.1" y="158.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.34%)</title><rect x="1154.1" y="131.0" width="4.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1157.1" y="142.0"></text>
</g>
<g>
<title>ciInstance::field_value(ciField*) (1 samples, 0.34%)</title><rect x="1154.1" y="115.0" width="4.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1157.1" y="126.0"></text>
</g>
<g>
<title>ciObjectFactory::get(oopDesc*) (1 samples, 0.34%)</title><rect x="1154.1" y="99.0" width="4.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1157.1" y="110.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_object(oopDesc*) (1 samples, 0.34%)</title><rect x="1154.1" y="83.0" width="4.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1157.1" y="94.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.34%)</title><rect x="1154.1" y="67.0" width="4.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1157.1" y="78.0"></text>
</g>
<g>
<title>Parse::do_checkcast() (1 samples, 0.34%)</title><rect x="1158.1" y="435.0" width="4.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1161.1" y="446.0"></text>
</g>
<g>
<title>GraphKit::gen_checkcast(Node*, Node*, Node**) (1 samples, 0.34%)</title><rect x="1158.1" y="419.0" width="4.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1161.1" y="430.0"></text>
</g>
<g>
<title>GraphKit::null_check_oop(Node*, Node**, bool, bool) (1 samples, 0.34%)</title><rect x="1158.1" y="403.0" width="4.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1161.1" y="414.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**) (1 samples, 0.34%)</title><rect x="1158.1" y="387.0" width="4.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1161.1" y="398.0"></text>
</g>
<g>
<title>GraphKit::cast_not_null(Node*, bool) (1 samples, 0.34%)</title><rect x="1158.1" y="371.0" width="4.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1161.1" y="382.0"></text>
</g>
<g>
<title>ConstraintCastNode::Identity(PhaseTransform*) (1 samples, 0.34%)</title><rect x="1158.1" y="355.0" width="4.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1161.1" y="366.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*) (1 samples, 0.34%)</title><rect x="1162.1" y="515.0" width="4.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1165.1" y="526.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int) (3 samples, 1.01%)</title><rect x="1166.1" y="547.0" width="11.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1169.1" y="558.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*) (3 samples, 1.01%)</title><rect x="1166.1" y="531.0" width="11.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1169.1" y="542.0"></text>
</g>
<g>
<title>Compilation::compile_method() (3 samples, 1.01%)</title><rect x="1166.1" y="515.0" width="11.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1169.1" y="526.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (2 samples, 0.68%)</title><rect x="1166.1" y="499.0" width="8.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1169.1" y="510.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (1 samples, 0.34%)</title><rect x="1166.1" y="483.0" width="4.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1169.1" y="494.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1 samples, 0.34%)</title><rect x="1166.1" y="467.0" width="4.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1169.1" y="478.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (1 samples, 0.34%)</title><rect x="1166.1" y="451.0" width="4.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.1" y="462.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (1 samples, 0.34%)</title><rect x="1170.1" y="483.0" width="4.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.1" y="494.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle) (1 samples, 0.34%)</title><rect x="1170.1" y="467.0" width="4.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1173.1" y="478.0"></text>
</g>
<g>
<title>pthread_getspecific (1 samples, 0.34%)</title><rect x="1170.1" y="451.0" width="4.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1173.1" y="462.0"></text>
</g>
<g>
<title>Compilation::install_code(int) (1 samples, 0.34%)</title><rect x="1174.1" y="499.0" width="3.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1177.1" y="510.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, bool, bool, RTMState) (1 samples, 0.34%)</title><rect x="1174.1" y="483.0" width="3.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1177.1" y="494.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int) (1 samples, 0.34%)</title><rect x="1174.1" y="467.0" width="3.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1177.1" y="478.0"></text>
</g>
<g>
<title>CodeCache::allocate(int, bool) (1 samples, 0.34%)</title><rect x="1174.1" y="451.0" width="3.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1177.1" y="462.0"></text>
</g>
<g>
<title>CodeHeap::allocate(unsigned long, bool) (1 samples, 0.34%)</title><rect x="1174.1" y="435.0" width="3.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1177.1" y="446.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (1 samples, 0.34%)</title><rect x="1178.0" y="547.0" width="4.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.0" y="558.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.34%)</title><rect x="1178.0" y="531.0" width="4.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.0" y="542.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.34%)</title><rect x="1178.0" y="515.0" width="4.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1181.0" y="526.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle, ciInstanceKlass*) (1 samples, 0.34%)</title><rect x="1178.0" y="499.0" width="4.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.0" y="510.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle, ciSymbol*) (1 samples, 0.34%)</title><rect x="1178.0" y="483.0" width="4.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.0" y="494.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle, ciSymbol*, bool) (1 samples, 0.34%)</title><rect x="1178.0" y="467.0" width="4.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1181.0" y="478.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (1 samples, 0.34%)</title><rect x="1178.0" y="451.0" width="4.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.0" y="462.0"></text>
</g>
<g>
<title>SystemDictionary::find_instance_or_array_klass(Symbol*, Handle, Handle, Thread*) (1 samples, 0.34%)</title><rect x="1178.0" y="435.0" width="4.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.0" y="446.0"></text>
</g>
<g>
<title>SystemDictionary::find(Symbol*, Handle, Handle, Thread*) (1 samples, 0.34%)</title><rect x="1178.0" y="419.0" width="4.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1181.0" y="430.0"></text>
</g>
<g>
<title>Dictionary::find(int, unsigned int, Symbol*, ClassLoaderData*, Handle, Thread*) (1 samples, 0.34%)</title><rect x="1178.0" y="403.0" width="4.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.0" y="414.0"></text>
</g>
<g>
<title>CompileQueue::get() (1 samples, 0.34%)</title><rect x="1182.0" y="563.0" width="4.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.0" y="574.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (1 samples, 0.34%)</title><rect x="1182.0" y="547.0" width="4.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.0" y="558.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (1 samples, 0.34%)</title><rect x="1182.0" y="531.0" width="4.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.0" y="542.0"></text>
</g>
<g>
<title>NMethodSweeper::process_nmethod(nmethod*) (1 samples, 0.34%)</title><rect x="1182.0" y="515.0" width="4.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.0" y="526.0"></text>
</g>
<g>
<title>nmethod::cleanup_inline_caches() (1 samples, 0.34%)</title><rect x="1182.0" y="499.0" width="4.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.0" y="510.0"></text>
</g>
<g>
<title>NativeCall::destination() const (1 samples, 0.34%)</title><rect x="1182.0" y="483.0" width="4.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.0" y="494.0"></text>
</g>
<g>
<title>is_error_reported() (1 samples, 0.34%)</title><rect x="1186.0" y="611.0" width="4.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1189.0" y="622.0"></text>
</g>
</g>
</svg>
